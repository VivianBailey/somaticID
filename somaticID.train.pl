#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long;

## Train new models as self-trained RDA files
## Author: Qiang Gong <gongqiang.big@gmail.com>

## Initialize and obtain arguments
my $pfx;
my $nbam;
my $somaticID_dir = $0;
$somaticID_dir =~ s/[^\/]+$//;
$somaticID_dir = "." unless $somaticID_dir;
my $rft        = "$somaticID_dir/RF_trainer.R";
my $mod_dir    = "$somaticID_dir/self_trained_RDA";

## Check necessary files
die( "Could not find RF_trainer.R in the directory $somaticID_dir\n" )
  unless -f $rft;
unless(-d $mod_dir){
	system("mkdir $mod_dir");
}
die( "Could not establish directory $somaticID_dir/self_trained_RDA\n" ) unless -d $mod_dir;

my $tabfiles;
my $rscript    = "Rscript";
my $help;
GetOptions(
	"tabfiles=s"   => \$tabfiles,
    "rscript=s"    => \$rscript,
	"help!"        => \$help
) or &Usage;
&Usage if $help;
&Usage unless $tabfiles;

$tabfiles =~ s/,/ /g;

my $ltime = localtime();
print "[$ltime] Classify somatic and non-somatic mutations\n";
system("$rscript $rft $tabfiles");

sub Usage {
    die(
        qq/
USAGE: somaticID.train.pl [OPTIONS] --tabfiles file1.tab,file2.tab,... 

NOTE: Input TAB files should either all contain single tumors or all with >=2 tumors.
      When given as a mixture, single-tumor data will be ignored and only multiple
	  tumor models will be trained.

OPTIONS:
	--tabfiles STRING      A list of TAB files generated by somaticID.pl
	--rscript  STRING      Path to Rscript [Rscript]  
	--help|-h              Print this page
\n/
    );
}
